import 'package:flutter/material.dart';
import 'package:firebase_core/firebase_core.dart'; // Required for Firebase initialization

// Import the generated Firebase options file.
// This file will be created by running 'flutterfire configure'.
import 'firebase_options.dart';

// Import your custom screen widgets from their respective files.
import 'medicinebox_screen.dart';
import 'wristband_screen.dart';


// The main function is the entry point of the Flutter application.
// It is marked as 'async' because Firebase initialization is an asynchronous operation.
void main() async {
  // WidgetsFlutterBinding.ensureInitialized() is crucial. It ensures that
  // the Flutter binding is initialized before any Flutter-specific calls are made,
  // especially important when interacting with platform channels or plugins like Firebase.
  WidgetsFlutterBinding.ensureInitialized();

  // Initialize Firebase for your application.
  // We now pass the platform-specific options generated by 'flutterfire configure'.
  await Firebase.initializeApp(
    options: DefaultFirebaseOptions.currentPlatform,
  );

  // Run the root widget of your application.
  runApp(const MyApp());
}

// MyApp is a StatelessWidget because its configuration (like theme and routes)
// does not change during the lifetime of the application.
class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    // MaterialApp is a convenience widget that wraps a number of widgets that
    // are commonly required for Material Design applications.
    return MaterialApp(
      title: 'Smart Care Hub', // The title of the application (e.g., in task switcher)
      theme: ThemeData(
        // Define the overall visual theme for the application using Material 3.
        colorScheme: ColorScheme.fromSeed(seedColor: Colors.deepPurple), // Primary color scheme
        useMaterial3: true, // Enable Material 3 design features
      ),
      // Define the named routes for navigation within the application.
      // This allows you to navigate to different screens using their names.
      initialRoute: '/', // The route that will be shown when the app first starts.
      routes: {
        '/': (context) => const HomePage(), // Route for the Home Page
        '/medicineBox': (context) => const MedicineBoxScreen(), // Route for the Medicine Box Screen
        '/wristband': (context) => const WristbandScreen(), // Route for the Wristband Screen
      },
      debugShowCheckedModeBanner: false, // Set to false to hide the "DEBUG" banner in debug mode.
    );
  }
}

// HomePage is a StatelessWidget. Its UI elements are static and do not change
// based on internal state. It primarily handles navigation.
class HomePage extends StatelessWidget {
  const HomePage({super.key});

  @override
  Widget build(BuildContext context) {
    // Scaffold provides the basic visual structure of a Material Design app.
    return Scaffold(
      body: SafeArea(
        // SafeArea ensures that the content of the app is not obscured by
        // system UI elements like the status bar, notches, or home indicators.
        child: Column(
          // Column arranges its children widgets in a vertical array.
          children: [
            Expanded(
              // Expanded makes its child (the Center widget) fill the available
              // vertical space, pushing the title to the vertical center.
              child: Center(
                // Center widget centers its child horizontally and vertically within itself.
                child: Text(
                  'Smart Care Hub', // The main title displayed on the home page.
                  style: TextStyle(
                    fontSize: 32, // Large font size for prominence.
                    fontWeight: FontWeight.bold, // Bold text for emphasis.
                    color: Colors.deepPurple, // A distinct color for the title.
                  ),
                ),
              ),
            ),
            Padding(
              // Padding widget adds space around its child.
              // Here, it adds padding at the bottom to position the options.
              padding: const EdgeInsets.only(bottom: 40.0),
              child: Row(
                // Row arranges its children widgets in a horizontal array.
                mainAxisAlignment: MainAxisAlignment.spaceEvenly, // Distributes space evenly between children.
                children: [
                  // Option card for "Medicine Box".
                  _buildOptionCard(
                    context,
                    icon: Icons.medical_services, // Icon representing medicine.
                    label: 'Medicine Box', // Text label for the option.
                    onTap: () {
                      // When tapped, navigate to the '/medicineBox' route.
                      Navigator.pushNamed(context, '/medicineBox');
                    },
                  ),
                  // Option card for "Wristband".
                  _buildOptionCard(
                    context,
                    icon: Icons.favorite, // Icon representing a heart (common for health/wearables).
                    label: 'Wristband', // Text label for the option.
                    onTap: () {
                      // When tapped, navigate to the '/wristband' route.
                      Navigator.pushNamed(context, '/wristband');
                    },
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
    );
  }

  // A helper method to create a reusable option card widget.
  // It takes context, an icon, a label, and an onTap callback.
  Widget _buildOptionCard(BuildContext context, {required IconData icon, required String label, required VoidCallback onTap}) {
    return InkWell(
      // InkWell provides a visual ripple effect when tapped, indicating interactivity.
      onTap: onTap, // The function to execute when the card is tapped.
      borderRadius: BorderRadius.circular(16.0), // Apply rounded corners to the tap area.
      child: Card(
        // Card is a Material Design component that provides a visually distinct
        // surface with rounded corners and elevation (shadow).
        elevation: 4, // The depth of the shadow beneath the card.
        shape: RoundedRectangleBorder(
          borderRadius: BorderRadius.circular(16.0), // Match InkWell's border radius for consistent look.
        ),
        child: Container(
          // Container provides additional styling and layout constraints for the card's content.
          width: MediaQuery.of(context).size.width * 0.4, // Set width to 40% of the screen width for responsiveness.
          padding: const EdgeInsets.all(20.0), // Internal padding for the card's content.
          child: Column(
            // Column arranges the icon and text vertically within the card.
            mainAxisSize: MainAxisSize.min, // Make the column take minimum space needed by its children.
            children: [
              Icon(
                icon, // The icon to display.
                size: 50, // Large icon size.
                color: Colors.deepPurple, // Color of the icon.
              ),
              const SizedBox(height: 10), // Vertical spacing between the icon and the text.
              Text(
                label, // The label text for the option.
                style: TextStyle(
                  fontSize: 18, // Font size for the label.
                  fontWeight: FontWeight.w600, // Semi-bold font weight.
                  color: Colors.black87, // Dark text color.
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }
}
